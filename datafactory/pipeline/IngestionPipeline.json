{
	"name": "IngestionPipeline",
	"properties": {
		"activities": [
			{
				"name": "If Source is Database",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.source.SourceType, 'Database')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "CopyCSVToBronze",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@pipeline().parameters.source.SourceSchema",
											"type": "Expression"
										},
										"wildcardFileName": {
											"value": "@concat(pipeline().parameters.source.SourceName,'.csv')",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "GenericDelimitedTextCSV",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "GenericParquet",
									"type": "DatasetReference",
									"parameters": {
										"fs": "bronze",
										"file": {
											"value": "@concat(\n  pipeline().parameters.source.SourceName, \n  '.parquet'\n)",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.source.BusinessUnit",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "CopyDatabaseToBronze",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM [', pipeline().parameters.source.SourceSchema, '].[', pipeline().parameters.source.SourceName, ']')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "GenericAzureSqlTable",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "GenericParquet",
									"type": "DatasetReference",
									"parameters": {
										"fs": "bronze",
										"file": {
											"value": "@concat(\n  pipeline().parameters.source.SourceName,\n  '.parquet'\n)",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.source.BusinessUnit",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"source": {
				"type": "object"
			}
		},
		"folder": {
			"name": "1-Bronze"
		},
		"annotations": []
	}
}